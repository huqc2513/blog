(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{167:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("之前业务需求，需要手写日历，但是时间比较紧，思路梳理并不好，这是一篇手记，用来梳理、记录日历开发历程，其内部实现参考了iview和element-ui 的DatePicker组件")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[a("a",{attrs:{href:"https://huqc2513.github.io/component/#/calendar",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击体验日历效果"),a("OutboundLink")],1)]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("此日历的外观参照了element-ui")]),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("从要考虑的问题出发，慢慢设计整个组件的拆解")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("日历一般是42个格子，假设日历默认是从周日开始，有些月份1号是周六，一些是周一，要预留中间的前面上个月的日期个数差值，")]),t._v(" "),a("p",[t._v("取得日历数据的步骤")]),t._v(" "),t._m(13),t._v(" "),t._m(14),a("p",[a("a",{attrs:{href:"https://github.com/huqc2513/component/blob/master/src/components/calendar/newCalendar/date.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体实现代码跳转"),a("OutboundLink")],1)]),t._v(" "),t._m(15),t._v(" "),a("p",[t._v("该组件负责渲染整个月份，将单月的日历数据切分为7*6的二维数组，采用table布局，使用两层v-for渲染，并且将每层的下标设置在td上，或者在它的下一级cell组件上")]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),a("ul",[t._m(19),t._v(" "),a("li",[t._m(20),t._v(" "),a("p",[a("a",{attrs:{href:"https://huqc2513.github.io/component/#/calendar",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看鼠标移入日历，高亮区间效果"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("需要实现鼠标移入，从startTime到鼠标移动到的日期，中间间隔的的日期全部高亮")]),t._v(" "),a("p",[t._v("我们采用修改日期数据列表的方式来达到，这一步其实很简单，移动过程中，拿到目标元素中绑定的row和column下标，取得元素中的Date,将Date和startDate比较，如果比 StartDate大，就设置为endDate就行。")]),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("如果比StartDate小，在move事件中置换两个变量，这样是会有问题的，因为StartDate是需要变为endDate，在move事件所移动到的目标元素获取到的Date，会替换为start,而start替换为end,这样鼠标每次往startTime方向移动，会出现startTime和endTime每次只差一天的情况")]),t._v(" "),a("p",[t._v("换一种思路，我们只考虑startDate和endDate只是代表着一个区间，能拿到这个区间，就可以实现高亮了，我们在cell组件内部，每一个日期绑定class的时候，手动判断一次startDate和endDate的大小就可以了，如果start比end大，则互相替换一下需要添加class元素的位置就可以了，不需要直接修改start和end")])])]),t._v(" "),t._m(22),t._v(" "),a("p",[t._v("整个组件中的重点实现已经记录完了，类似head组件和cell组件只剩下一些props声明和简单的判断year,month条件等，")]),t._v(" "),a("p",[t._v("目前还是留下了一些问题，有待重构部分代码")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),a("p",[t._v("这篇手记基本就是用来记录其实现过程的一些思路，没有任何代码参与。因为这种区间选择日历组件，业务逻辑是比较复杂的，有许多边界条件需要判断，Iview组件内部实现的日历组件，picker组件文件不下1000行代码，多数是边界条件判断以及控制传入参数。")]),t._v(" "),a("p",[t._v("复杂的vue组件开发，需要先构思好组件设计，以及组合拆解，针对没有思路的时候，可以从市面上的开源VueUI框架参考其实现原理，其实很多UI框架都是互相参考实现的，像DatePicker组件也可以看到Iview和element两个框架，组件拆分，文件以及目录划分都一样的。在日常开发中，多参考别人好的实现，汲取精华，慢慢积累与成长")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/huqc2513/component/tree/master/src/components/calendar/newCalendar",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看日历组件码地址"),a("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"datapicker实现-日期选择组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datapicker实现-日期选择组件","aria-hidden":"true"}},[this._v("#")]),this._v(" dataPicker实现(日期选择组件)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"日历组件功能一览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日历组件功能一览","aria-hidden":"true"}},[this._v("#")]),this._v(" 日历组件功能一览")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[this._v("#")]),this._v(" 功能")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("支持单选日期")]),this._v(" "),e("li",[this._v("时间范围选择")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"要考虑的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#要考虑的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 要考虑的问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("计算每个月的天数，以及补上个月的日期以及下个月的日期")]),this._v(" "),e("li",[this._v("Range组件，时间范围，鼠标移入和移出计算出中日历中的range区域实现高亮")]),this._v(" "),e("li",[this._v("Range组件，跨月选择日期，数据怎样处理")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"datepickerrange组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datepickerrange组件","aria-hidden":"true"}},[this._v("#")]),this._v(" DatePickerRange组件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/CalendarRange.png",alt:"avatar"}}),this._v(" "),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"组件划分和功能图解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件划分和功能图解","aria-hidden":"true"}},[this._v("#")]),this._v(" 组件划分和功能图解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("DateCalendarRange组件\n采用两个body组件+一个外层组件组合")]),this._v(" "),e("li",[this._v("DateCalendar组件\n划分为body组件即可，body组件即可满足单选功能")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"图解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图解","aria-hidden":"true"}},[this._v("#")]),this._v(" 图解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/explain.png",alt:"avatar"}}),this._v(" "),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"获取本月数据与补上月数据和下月数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取本月数据与补上月数据和下月数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取本月数据与补上月数据和下月数据")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("求上个月需要补的日期数")]),this._v(" "),e("li",[this._v("求本月的天数")]),this._v(" "),e("li",[this._v("求下月要补的天数")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//伪代码  计算上个月公式  其实就是这一段逻辑比较绕，每计算一天，i会加一天  ")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("上个月最后一天  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 本月第一天的星期数 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i  \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"c-body组件实现（核心实现）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-body组件实现（核心实现）","aria-hidden":"true"}},[this._v("#")]),this._v(" c-body组件实现（核心实现）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"接口设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#接口设计","aria-hidden":"true"}},[this._v("#")]),this._v(" 接口设计")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("组件需要向外暴露minDate和maxDate")]),this._v(" "),e("p",[this._v("用来控制选择日期的区间")])]),this._v(" "),e("li",[e("p",[this._v("内部保留一个StartDate和endDate")]),this._v(" "),e("p",[this._v("方便在鼠标move时，改变数据，不需要emit到外部。且watch 自身的StartDate和endDate，每次改变时去emit父级组件改变minDate和maxDate就可以了。这样也实现了数据双向流通")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"实现功能思路拆解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现功能思路拆解","aria-hidden":"true"}},[this._v("#")]),this._v(" 实现功能思路拆解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("strong",[this._v("每一个日期click处理")])]),this._v(" "),e("p",[this._v("点击每一个日期的处理，需要将每次点击的日期，存放在当前组件的状态，我们组件内部用stateDate和endDate来表示，且watch这两个属性的变化，每次有变化时，派发到外部组件去通知修改minDate和maxDate，")]),this._v(" "),e("p",[this._v("如果是单选，就只保留一个minDate,如果是范围选择，就只保留两个，超过则清空")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("c-body的mousemove处理（难点）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("如果当前移动的目标Date比StartDate小怎么办？")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"一些其他的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些其他的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 一些其他的问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("只采用start和end两个标志点，在move事件中是如果是反方向移动，是没法置换start和end的，是否是需要设立第三个标志点")]),this._v(" "),e("li",[this._v("简化组件实现逻辑")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"后记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后记","aria-hidden":"true"}},[this._v("#")]),this._v(" 后记")])}],!1,null,null,null);e.default=s.exports}}]);